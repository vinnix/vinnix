#!/usr/bin/env sh
sudo mkdir -p /var/www/flask/
cd ~
sudo chmod -R 755 ~
sudo dnf update -y
sudo dnf install -y httpd httpd-tools python3 python3-devel python3-pip httpd-devel gcc virtualenv
sudo dnf group install -y 'Development Tools'
sudo dnf -y localinstall https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm
sudo rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2023
sudo dnf -y install mysql mysql-server

virtualenv -p python3 venv
source venv/bin/activate 

python3 -m pip install flask mysql-connector-python mod_wsgi
# Start and enable MySQL
sudo systemctl set-environment MYSQLD_OPTS="--skip-grant-tables"
sudo systemctl start mysqld
sudo systemctl enable mysqld

# Set up MySQL root password and create database
sudo mysql --connect-expired-password -e "UPDATE mysql.user SET authentication_string=null WHERE User='root'";
sudo systemctl set-environment MYSQLD_OPTS=""
sudo systemctl restart mysqld
MYSQL_ROOT_PASSWORD=$(openssl rand -base64 64)
sudo mysql --connect-expired-password -e "set password ='$MYSQL_ROOT_PASSWORD'"

# Create database and user
sudo mysql -u root -p"$MYSQL_ROOT_PASSWORD" <<EOF
CREATE DATABASE IF NOT EXISTS dbname;
CREATE USER 'dbusername'@'localhost' IDENTIFIED BY 'とても複雑なパスワード';
GRANT ALL PRIVILEGES ON dbname.* TO 'dbusername'@'localhost';
FLUSH PRIVILEGES;
USE dbname;
CREATE TABLE IF NOT EXISTS messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    content VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
EOF

# Start and enable Apache
sudo systemctl start httpd
sudo systemctl enable httpd



# Create a Flask app with data insertion and display capabilities
sudo tee /var/www/flask/app.py > /dev/null <<EOF
from flask import Flask, request, render_template_string
import mysql.connector
from datetime import datetime

app = Flask(__name__)

def get_db_connection():
    return mysql.connector.connect(user='dbusername', password='とても複雑なパスワード',
                                   host='localhost',
                                   database='dbname')

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        content = request.form.get('content')
        if content:
            conn = get_db_connection()
            cursor = conn.cursor()
            cursor.execute("INSERT INTO messages (content) VALUES (%s)", (content,))
            conn.commit()
            cursor.close()
            conn.close()

    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT content, created_at FROM messages ORDER BY created_at DESC")
    messages = cursor.fetchall()
    cursor.close()
    conn.close()

    return render_template_string('''
        <!doctype html>
        <html>
            <body>
                <h1>Message Board</h1>
                <form method="post">
                    <input type="text" name="content" placeholder="Enter a message">
                    <input type="submit" value="Post">
                </form>
                <h2>Messages:</h2>
                <ul>
                    {% for message in messages %}
                        <li>{{ message[0] }} ({{ message[1] }})</li>
                    {% endfor %}
                </ul>
            </body>
        </html>
    ''', messages=messages)

if __name__ == '__main__':
    app.run()
EOF

sudo tee /var/www/flask/adapter.wsgi > /dev/null <<EOF
import sys
sys.path.insert(0, '/var/www/flask')
from app import app as application
EOF

# Find the correct path for mod_wsgi
MOD_WSGI_PATH=$(sudo find ~/venv/* -name 'mod_wsgi*.so' | head -n 1)
MOD_WSGI_FOLDER=$(sudo find ~ -type d -name 'venv' | head -n 1)
MOD_WSGI_PYTHON_PATH=$(sudo find $MOD_WSGI -type d -name 'site-packages' | head -n 1)
sudo tee /etc/httpd/conf.d/flask.conf > /dev/null <<EOF
LoadModule wsgi_module ${MOD_WSGI_PATH}
<VirtualHost *:80>
  DocumentRoot /var/www/flask
  WSGIDaemonProcess flask threads=5 python-home=${MOD_WSGI_FOLDER} python-path=${MOD_WSGI_PYTHON_PATH}
  WSGIProcessGroup flask
  WSGIScriptAlias / /var/www/flask/adapter.wsgi
  <Directory "/var/www/flask/">
    options +Indexes +FollowSymLinks +ExecCGI
  </Directory>
</VirtualHost>
EOF

# Restart Apache to apply changes
sudo systemctl restart httpd

reference: https://qiita.com/usaneko_xlarge/items/d1216d38388f975e0049
